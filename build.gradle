buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.3"
}
apply plugin: 'forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

version = "1.0"
group= "dev.bq_thermos_patch" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BQ3-Thermos-Patch"


ext {
    mixinSrg = new File(project.buildDir, 'tmp/mixins/mixin.magihandlers.srg')
    mixinRefMap = new File(project.buildDir, "tmp/mixins/mixin.magihandlers.refmap.json")
}

reobf.addExtraSrgFile project.mixinSrg

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

compileJava {
    options.compilerArgs += [
            '-Xlint:-processing',
            "-AoutSrgFile=${project.mixinSrg.canonicalPath}",
            "-AoutRefMapFile=${project.mixinRefMap.canonicalPath}",
            "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
    ]
}

afterEvaluate {
    tasks.compileJava.options.compilerArgs += "-AreobfSrgFile=${tasks.reobf.srg}"
}

task copySrgs(type: Copy, dependsOn: 'genSrgs') {
    from plugins.getPlugin("forge").delayedFile('{SRG_DIR}')

    include '**/*.srg'
    into 'build/srgs'
}

setupDecompWorkspace.dependsOn copySrgs
setupDevWorkspace.dependsOn copySrgs
compileJava.dependsOn copySrgs

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven {
        name = "SpongePowered"
        url = "https://repo.spongepowered.org/maven"
    }
}


dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
        compileOnly fileTree(dir: 'lib', include: ['*.jar'])
    }
}

jar {
    from project.mixinRefMap

    manifest {
            attributes 'FMLCorePlugin': 'dev.bq3_thermos_patch.Plugin',
                    'FMLCorePluginContainsFMLMod': 'false',
                    "TweakClass": "shaded.org.spongepowered.asm.launch.MixinTweaker",
                    'TweakOrder': '0'
    }

}

processResources {}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.tcneiadditions.refmap.json"
shadowJar {
    classifier = ""
    configurations = []
    relocate "org.spongepowered", "shaded.org.spongepowered"

    from refMap
}
tasks.jar.finalizedBy(shadowJar)